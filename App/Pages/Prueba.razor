@page "/prueba"


<div class="container" style="padding-right: 15%; padding-left: 15%; padding-top: 7%;">
    <h3
        style="text-align: center; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; padding-bottom: 5%;">
        Bienvenido a RecorD</h3>
    <div class="form-group">
        <input type="text" class="form-control" name="" id="" aria-describedby="helpId"
            placeholder="Escriba lo que desea recordar" style="text-align: center;" @onchange="agregar" value="@input">
        <div class="row" style="justify-content: center; margin-top: 1%;">
            <div class="col-4" style="text-align: center;">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1"
                        @onclick="cargarDB">
                    <label class="form-check-label" for="flexRadioDefault1">
                        Mostrar Todas
                    </label>
                </div>
            </div>
            <div class="col-4" style="text-align: center;">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2"
                        @onclick="()=>getStatus(true)">
                    <label class="form-check-label" for="flexRadioDefault2">
                        Solo completas
                    </label>
                </div>
            </div>
            <div class="col-4" style="text-align: center;">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault3"
                        @onclick="()=>getStatus(false)">
                    <label class="form-check-label" for="flexRadioDefault3">
                        Solo Incompletas
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container" style="padding-top: 10%;">
    <div class="row">
        @foreach (var item in listado)
        {
            <div class="col-4">
                <div class="card bg-light mb-3" style="max-width: 18rem; border-radius: 10%;" id="@item.NotasId">
                    <div class="card-header">@item.fecha.ToString("g");
                        <button class="btn" style=" margin-left:5%; color:orange" @onclick="()=>editButton(item.NotasId)"><i
                            class="oi oi-pencil"></i></button>
                        <button class="btn" style="color: red;" @onclick="()=>deleteButtom(item.NotasId)"><i
                            class="oi oi-trash"></i></button>
                    </div>
                    <div class="card-body">
                        @if (item.NotasId != id)
                        {
                            <h5 class="card-title">@item.Contenido</h5>
                        }
                        else
                        {
                            <input type="text" value="@item.Contenido" @onchange="ags=>edit(ags,item)">
                        }
                        @if (item.completada == false)
                        {
                            <input type="checkbox" name="esto" @onclick="()=>completar(item,true)">

                        }
                        else
                        {
                            <input type="checkbox" name="esto" checked @onclick="()=>completar(item,false)">
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@code {
    private List<Notas> listado = new List<Notas>();
    List<Users> listadoU = new List<Users>();
    private DateTime fecha = DateTime.Now;
    private string input;
    private Notas nota = new Notas();
    private int id;
    Users users = new Users();
    private NoteService service = new NoteService();
    async void agregar(ChangeEventArgs ags)
    {
        string mensaje = (string)ags.Value;
        input = (string)ags.Value;
        StateHasChanged();
        await Task.Delay(1);
        mensaje = mensaje.Replace(" ", "");

        if (mensaje == "")
        {
        }
        else
        {
            nota.Contenido = (string)ags.Value;
            nota.completada = false;
            service.addNotes(nota);
            this.input = "";
            StateHasChanged();
            await Task.Delay(1);
            cargarDB();
            StateHasChanged();
        }
    }
    void cargarDB()
    {
        listado.Clear();
        listado = service.getNotes();
    }

    void deleteButtom(int id)
    {
        service.removeNotes(id);
        cargarDB();
        StateHasChanged();
    }

    void completar(Notas nota, bool completa)
    {
        nota.completada = completa;
        service.getEditNotes(nota);
        cargarDB();
    }
    void edit(ChangeEventArgs ags, Notas nota)
    {
        string mensaje = (string)ags.Value;
        mensaje = mensaje.Replace(" ", "");
        if (mensaje == "")
        {

        }
        else
        {
            nota.Contenido = (string)ags.Value;
            service.getEditNotes(nota);
            cargarDB();
            id = new int();
        }
    }
    void editButton(int id)
    {
        this.id = id;
    }

    void getStatus(bool status)
    {
        listado.Clear();
        foreach (var item in service.getNotes())
        {

            if (item.completada == status)
            {
                listado.Add(item);
            }

        }
    }
}
